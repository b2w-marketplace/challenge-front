{"version":3,"sources":["logo.svg","ProgressComponentItem.jsx","ProfileSkills.jsx","ProfileHeader.jsx","InfoSection.jsx","WorkExperiences.jsx","Education.jsx","Footer.jsx","App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","ProgressComponentItem","styles","width","concat","this","props","porcentage","backgroundColor","color","title","toUpperCase","react_default","a","createElement","className","style","role","aria-valuenow","aria-valuemin","aria-valuemax","Component","ProfileSkills","skills","map","skill","index","ProgressComponentItem_ProgressComponentItem","key","name","parseInt","value","ProfileHeader","profileData","contact","src","image","profession","description","tel","cel","address","website","mail","InfoSection","data","sectionTitle","toString","element","date","WorkExperiences","experiences","src_InfoSection","educations","Footer","href","App","args","_this","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","state","profile","fetchData","_this2","fetch","then","json","setState","id","src_ProfileHeader","src_ProfileSkills","src_WorkExperiences","experience","Education","education","src_Footer","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.70e2ac49.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","import React, { Component } from 'react';\n\nexport default class ProgressComponentItem extends Component {\n  render() {\n    let styles = {\n      width: `${this.props.porcentage}%`,\n      backgroundColor: this.props.color || 'white'\n    }\n\n    let title = this.props.title.toUpperCase()\n\n    return (\n      <div className=\"progress-item\">\n        <span className=\"progress-title\">{title}</span>\n        <div className=\"progress\">\n           <div style={styles} className=\"progress-bar\" role=\"progressbar\" aria-valuenow={this.props.porcentage} aria-valuemin=\"0\" aria-valuemax=\"100\">\n              <span className=\"progress-percent\"> {this.props.porcentage}%</span>\n           </div>\n        </div>\n     </div>\n    )\n  } \n}","import React, { Component } from 'react';\n\nimport ProgressComponentItem from './ProgressComponentItem'\n\n\nclass ProfileSkills extends Component {\n  render() {\n    const skills = this.props.skills || []\n\n    return (\n      <div>\n        <div className=\"row\">\n         <div className=\"col-md-12\">\n            <div className=\"section-title\">\n               <h2 className=\"ct\">SKILLS</h2>\n               <hr className=\"hr1\"/>\n            </div>\n         </div>\n        </div>\n        <div className=\"row\">\n           <div className=\"col-md-12\">\n              <div className=\"progress-wrapper\">\n               {skills.map((skill, index) => {\n                  return <ProgressComponentItem\n                            key={index}\n                            title={skill.name}\n                            porcentage={parseInt(skill.value)}\n                            color={skill.color}  \n                          />\n               })}\n              </div>\n           </div>\n        </div>\n    </div>\n    );\n  }\n}\n\nexport default ProfileSkills;\n","import React, { Component } from 'react';\n\nclass ProfileHeader extends Component {\n  render() {\n    const profileData = this.props.profileData\n    profileData.contact = profileData.contact || {}\n\n    return (\n      <div>\n        <div className=\"profile-img\">\n           <img src={profileData.image} className=\"img-responsive\"/>\n        </div>\n\n        <div className=\"row\">\n           <div className=\"col-md-12\">\n              <div className=\"section-title\">\n                 <h1>{profileData.name}</h1>\n                 <span className=\"lead\">{profileData.profession}</span>\n                 <hr className=\"\"/>\n              </div>\n           </div>\n        </div>\n        <div className=\"about-text\">\n           <h2>PROFILE</h2>\n           <hr className=\"hr1\"/>\n           <p>{profileData.description}</p>\n           <h2>CONTACT</h2>\n           <hr className=\"hr1\"/>\n           <p>{profileData.contact.tel}</p>\n           <p>{profileData.contact.cel}</p>\n           <p>{profileData.contact.address}</p>\n           <p>{profileData.contact.website}</p>\n           <p>{profileData.contact.mail}</p>\n        </div>\n    </div>\n    );\n  }\n}\n\nexport default ProfileHeader;\n\n\n","import React, { Component } from 'react';\n\nclass InfoSection extends Component {\n  render() {\n    const data = this.props.data || []\n\n    return (\n      <div>\n         <div className=\"row\">\n            <div className=\"col-md-12\">\n               <div className=\"section-title\">\n                  <h2>{this.props.sectionTitle.toString().toUpperCase()}</h2>\n                  <hr className=\"hrt\"/>\n               </div>\n            </div>\n         </div>\n         <div className=\"row\">\n            <div className=\"col-md-12\">\n               {data.map((element, index) => {\n                 return (\n                    <div className=\"content-item\">\n                       <h2>{element.name}</h2>\n                       <h3>{element.date}</h3>\n                       <p>{element.description}</p>\n                    </div>\n\n                 )\n               })}\n            </div>\n         </div>\n      </div>\n    );\n  }\n}\n\nexport default InfoSection;\n","import React, { Component } from 'react';\n\nimport InfoSection from './InfoSection'\n\nclass WorkExperiences extends Component {\n  render() {\n    const experiences = this.props.experiences || []\n\n    return (\n      <InfoSection data={experiences} sectionTitle={'Work Experiences'} />\n    );\n  }\n}\n\nexport default WorkExperiences;","import React, { Component } from 'react';\n\nimport InfoSection from './InfoSection'\n\nclass WorkExperiences extends Component {\n  render() {\n    const educations = this.props.educations || []\n\n    return (\n      <InfoSection data={educations} sectionTitle={'Education Experiences'} />\n    );\n  }\n}\n\nexport default WorkExperiences;","import React, { Component } from 'react';\n\nclass Footer extends Component {\n  render() {\n    return (\n      <div>\n        <footer className=\"footer\">\n           <div className=\"copyright-section\">\n              <div className=\"container-fluid\">\n                 <div className=\"row\">\n                    <div className=\"col-md-12\">\n                       <div className=\"copytext\">&copy; Lucas Tavares - Front End | By: <a\n                          href=\"https://linkedin.com/in/lucascamaraalvestavares/\">My</a></div>\n                    </div>\n                 </div>\n              </div>\n           </div>\n        </footer>\n      </div>\n    );\n  }\n}\n\nexport default Footer;","import React, { Component } from 'react';\nimport logo from './logo.svg';\nimport './App.css';\n\nimport ProfileSkills from './ProfileSkills'\nimport ProfileHeader from './ProfileHeader'\nimport WorkExperiences from './WorkExperiences'\nimport Education from './Education'\nimport Footer from './Footer'\n\nclass App extends Component {\n  constructor(args) {\n    super(args)\n    this.state = {\n      profile: {\n        name: 'Carregando...'\n      }\n    }\n  }\n\n  componentDidMount() {\n    this.fetchData()\n  }\n\n  fetchData() {\n    var self = this\n\n    fetch('https://api.myjson.com/bins/cl2wk').then((data) => (\n      data.json()      \n    )).then((json) => {\n      this.setState({ profile: json.profile })\n    })\n  }\n\n  render() {\n    return (\n      <div className=\"App\">\n        <div id=\"main-wrapper\">\n          <div className=\"columns-block container\">\n             <div className=\"left-col-block blocks\">\n                <header className=\"header theiaStickySidebar\">\n                   <div className=\"content\">\n                      <ProfileHeader profileData={this.state.profile}/>\n                      <ProfileSkills skills={this.state.profile.skills || []} />\n                   </div>\n                </header>\n             </div>\n             <div className=\"right-col-block blocks\">\n                <div className=\"theiaStickySidebar\">\n                   <section className=\"section-wrapper section-interest gray-bg\">\n                      <div className=\"container-fluid\">\n                         <WorkExperiences experiences={this.state.profile.experience}/>\n                         <Education educations={this.state.profile.education}/>\n                      </div>\n                   </section>\n                   <Footer />\n                </div>\n             </div>\n          </div>\n        </div>\n    </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}